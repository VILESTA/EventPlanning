@model EventsPlanning.Models.Event

@{
    ViewBag.Title = "Планирование мероприятия";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Create", "Events", method:FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Title, "Наименование мероприятия", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", name = "Title" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateTime, "Дата и время", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local", name = "DateTime" } })
            @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, "Место проведения", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", name = "Address" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxMembersCount, "Количество участников", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaxMembersCount, new { htmlAttributes = new { @class = "form-control", type = "number", name = "MaxMembersCount" } })
            @Html.ValidationMessageFor(model => model.MaxMembersCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fields, "Дополнительная информация", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="form-horizontal container" id="fieldsList">
            </div>
            <div class="form-horizontal container">
                <div class="form-group">
                    <a class="addField btn btn-default">Добавить новое поле</a>
                    @*@Html.ActionLink("Удалить поле", "Create", routeValues: new { addFieldsCount = Model.Fields.Count - 1 }, htmlAttributes: new { @class = "btn btn-danger" })*@
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Создать мероприятие" class="btn btn-primary" />
        </div>
    </div>
</div>
}

@section Scripts {
   <script>
       $(function () {
            var i = 0;
            $('.addField').click(function()
            {
                i++;
                var html2Add= "<div class='form-group'>" +
                        "<input type='text' class='form-control col-md-1' name='names' placeholder = 'Название поля доп.информации' />" +
                        "<input type='text' class='form-control col-md-5' name='values' placeholder = 'Значение поля доп.информации' />" +
                    "</div>";
                $('#fieldsList').append(html2Add);
            })
       })
    </script>
}

<div>
    @Html.ActionLink("Вернуться к списку мероприятий", "Index", "Home", null, htmlAttributes: new { @class = "btn btn-default" })
</div>
