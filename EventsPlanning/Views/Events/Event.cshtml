@model EventsPlanning.Models.Event
@{
    ViewBag.Title = Model.Title;
}

<div class="container-fluid">
    <h2 class="row">@Model.Title [ @ViewBag.CountOfMembers / @Model.MaxMembersCount ]</h2>
    <h6 class="text-muted mb-3 row">Организатор: @ViewBag.Author</h6>
    <ul class="list-group mb-3 row">
        <li class="list-group-item">Дополнительная информация</li>
        <li class="list-group-item">@(((EventsPlanning.Controllers.EventsController)Html.ViewContext.Controller).EventManager.GetDescription(Model.EventId))</li>
    </ul>
    <div class="row mb-3">
        <p class="col"></p>
        <p class="col"></p>
        <h6 class="col-md-auto text-right">@Model.Address | @Model.DateTime</h6>
    </div>
    <div class="row">
        @if (((EventsPlanning.Controllers.EventsController)Html.ViewContext.Controller).IsInAccount() == true)
        {
            if (!User.IsInRole("admin"))
            {
                if (((EventsPlanning.Controllers.EventsController)Html.ViewContext.Controller).IsUserOnEvent(Model.EventId))
                {
                    @Html.ActionLink("Отменить запись", "SignOutFromEvent", routeValues: new { eventId = Model.EventId }, htmlAttributes: new { @class = "btn btn-default" })
                }
                else
                {
                    if (((EventsPlanning.Controllers.EventsController)Html.ViewContext.Controller).CountOfUsersOnEvent(Model.EventId) < Model.MaxMembersCount)
                    {
                        @Html.ActionLink("Записаться на мероприятие", "SignUpForEvent", routeValues: new { eventId = Model.EventId }, htmlAttributes: new { @class = "btn btn-primary" })
                    }
                    else
                    {
                        <button class="btn btn-default disabled">Уже все места заняты, ожидайте освобождения мест</button>
                    }
                }
            }
            else
            {
                if (ViewBag.IsAuthor == 0)
                {
                    @Html.ActionLink("Удалить мероприятие", "Delete", routeValues: new { eventId = Model.EventId }, htmlAttributes: new { @class = "btn btn-danger" })
                }
                else
                {
                    if (((EventsPlanning.Controllers.EventsController)Html.ViewContext.Controller).IsUserOnEvent(Model.EventId))
                    {
                        @Html.ActionLink("Отменить запись", "SignOutFromEvent", routeValues: new { eventId = Model.EventId }, htmlAttributes: new { @class = "btn btn-default" })
                    }
                    else
                    {
                        if (((EventsPlanning.Controllers.EventsController)Html.ViewContext.Controller).CountOfUsersOnEvent(Model.EventId) < Model.MaxMembersCount)
                        {
                            @Html.ActionLink("Записаться на мероприятие", "SignUpForEvent", routeValues: new { eventId = Model.EventId }, htmlAttributes: new { @class = "btn btn-primary" })
                        }
                        else
                        {
                            <button class="btn btn-default disabled">Уже все места заняты, ожидайте освобождения мест</button>
                        }
                    }
                }
            }
        }
        else
        {
            <button class="btn btn-default disabled">Войдите в аккаунт для записи на мероприятие</button>
        }
    </div>
</div>